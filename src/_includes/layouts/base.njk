<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{{ title | default("TOLExperience") }}</title>

  <!-- CSS global (palette, polices, grilles, cartes, tol-*, scrollbars) -->
  <link rel="stylesheet" href="/assets/style.css">

  <style>
  /* === Variables spécifiques AU CADRE (mappées sur la palette globale) === */
  :root{
    /* recycle les variables de /assets/style.css */
    --bg:    var(--bg-color);
    --text:  var(--text-color);
    --stroke:var(--gray-500);

    /* Gabarit du cadre */
    --frame-gap: clamp(12px, 1.2vw + 8px, 1cm);
    --border-w:3px;
    --line-thin:1px;
    --line-center:2px;

    /* Taquets repères */
    --tick-base:7mm;
    --tick-mid-base:9mm;
    --tick-l:     min(var(--tick-base),     var(--frame-gap));
    --tick-l-mid: min(var(--tick-mid-base), calc(var(--frame-gap) + 10px));

    /* Logo fixe bas-droite */
    --logo-target: 34px;
    --logo-bottom-offset: 2px;
    --logo-clear-frame:  2px;

    /* Padding intérieur de la zone scrollable */
    --content-pad: clamp(12px, 2.2vw, 28px);

    /* Boutons haut */
    --btn-gap: clamp(6px, 1vw, 14px);
    --btn-font: clamp(14px, calc(var(--frame-gap)*0.90), 34px);
  }

  html,body{height:100%; margin:0; -webkit-text-size-adjust:100%;}
  body{
    background:var(--bg);
    color:var(--text);
    font-family:"TOLArial4", Arial, Helvetica, sans-serif;
    font-size:16px; line-height:1.55;
    min-height: 100dvh;
    padding: 0;
    overflow: hidden; /* pas de scroll page ; le scroll se fait dans .viewport */
    -webkit-touch-callout:none;
  }
  *,*::before,*::after{ box-sizing:border-box; }

  /* === Zone scrollable intérieure au cadre === */
  .viewport{
    position: fixed;
    top:    var(--frame-gap);
    right:  var(--frame-gap);
    bottom: var(--frame-gap);
    left:   var(--frame-gap);
    overflow: auto;
    overscroll-behavior: contain;
    -webkit-overflow-scrolling: touch;
    z-index: 100;
    padding: var(--content-pad);
    background: var(--bg);
  }

  /* ⬇⬇⬇ élargi : pleine largeur */
  .container{
    max-width: 100%;
    width: 100%;
    margin: 0 auto;
    background: var(--bg);
  }

  /* === Cadre + repères (visuels périphériques) === */
  .page-frame{position:fixed; inset:var(--frame-gap); pointer-events:none; z-index:999;}
  .page-frame::before{content:""; position:absolute; inset:0; border:var(--border-w) solid var(--stroke); border-radius:2px}
  .tick-top{position:absolute; left:0; right:0; height:var(--frame-gap); top:calc(-1*var(--frame-gap))}
  .tick-top::before{content:""; position:absolute; left:0; right:0; top:0; height:var(--tick-l);
    background:linear-gradient(var(--stroke),var(--stroke)) 25% 0/var(--line-thin) 100% no-repeat,
               linear-gradient(var(--stroke),var(--stroke)) 75% 0/var(--line-thin) 100% no-repeat;}
  .tick-top::after{content:""; position:absolute; left:50%; transform:translateX(-50%); top:0; width:var(--line-center); height:var(--tick-l-mid); background:var(--stroke);}
  .tick-bottom{position:absolute; left:0; right:0; height:var(--frame-gap); bottom:calc(-1*var(--frame-gap))}
  .tick-bottom::before{content:""; position:absolute; left:0; right:0; bottom:0; height:var(--tick-l);
    background:linear-gradient(var(--stroke),var(--stroke)) 25% 0/var(--line-thin) 100% no-repeat,
               linear-gradient(var(--stroke),var(--stroke)) 75% 0/var(--line-thin) 100% no-repeat;}
  .tick-bottom::after{content:""; position:absolute; left:50%; transform:translateX(-50%); bottom:0; width:var(--line-center); height:var(--tick-l-mid); background:var(--stroke);}
  .tick-left{position:absolute; top:0; bottom:0; width:var(--frame-gap); left:calc(-1*var(--frame-gap))}
  .tick-left::before{content:""; position:absolute; top:0; bottom:0; left:0; width:var(--tick-l);
    background:linear-gradient(90deg,var(--stroke),var(--stroke)) 0 25%/100% var(--line-thin) no-repeat,
               linear-gradient(90deg,var(--stroke),var(--stroke)) 0 75%/100% var(--line-thin) no-repeat;}
  .tick-left::after{content:""; position:absolute; top:50%; transform:translateY(-50%); left:0; height:var(--line-center); width:var(--tick-l-mid); background:var(--stroke);}
  .tick-right{position:absolute; top:0; bottom:0; width:var(--frame-gap); right:calc(-1*var(--frame-gap))}
  .tick-right::before{content:""; position:absolute; top:0; bottom:0; right:0; width:var(--tick-l);
    background:linear-gradient(90deg,var(--stroke),var(--stroke)) 0 25%/100% var(--line-thin) no-repeat,
               linear-gradient(90deg,var(--stroke),var(--stroke)) 0 75%/100% var(--line-thin) no-repeat;}
  .tick-right::after{content:""; position:absolute; top:50%; transform:translateY(-50%); right:0; height:var(--line-center); width:var(--tick-l-mid); background:var(--stroke);}

  /* === Logo bas-droite (protégé) === */
  img{
    -webkit-user-drag:none;
    user-select:none;
    pointer-events:none;
  }
  img[data-allow]{ pointer-events:auto; }
  .no-save{
    pointer-events:none;
    user-select:none;
    -webkit-user-drag:none;
    -webkit-touch-callout:none;
  }
  .frame-logo{
    position:fixed;
    right:var(--frame-gap);
    bottom:var(--logo-bottom-offset);
    height:min(var(--logo-target), calc(var(--frame-gap) - var(--logo-bottom-offset) - var(--logo-clear-frame)));
    width:auto; object-fit:contain; opacity:.95;
    z-index:1000;
  }

  /* === Boutons de contrôle (haut) === */
  .controls{
    position: fixed; top: 0; left: 0; right: 0;
    height: var(--frame-gap);
    pointer-events: none; z-index: 1100;
  }
  .controls button{
    position: absolute; top: 0; bottom: 0; margin: auto 0;
    background: transparent; border: 0;
    color: var(--stroke);
    font-family:"TOLArial2", Arial, Helvetica, sans-serif;
    font-weight: 700;
    font-size: var(--btn-font);
    line-height: 1;
    padding: 0 0.4em;
    white-space: nowrap; pointer-events: auto; cursor: pointer;
  }
  .btn-back  { right: calc(50% + var(--btn-gap)); }
  .btn-home  { left:  calc(50% + var(--btn-gap)); }
  .btn-theme { right: var(--frame-gap); }

  /* === Bridge thème : utilise les variables globales (style.css) === */
  body,
  .viewport,
  .container {
    background: var(--bg-color);
    color: var(--text-color);
  }
  </style>
</head>
<body>

  <!-- Barre de contrôle -->
  <div class="controls" aria-hidden="false">
    <button class="btn-back"  type="button" onclick="goBack()"   aria-label="Retour">Retour</button>
    <button class="btn-home"  type="button" onclick="location.href='/'" aria-label="Accueil">Accueil</button>
    <button class="btn-theme" type="button" onclick="toggleTheme()" aria-label="Changer de thème">Thème</button>
  </div>

  <!-- Cadre + repères -->
  <div class="page-frame" aria-hidden="true">
    <div class="tick-top"></div>
    <div class="tick-bottom"></div>
    <div class="tick-left"></div>
    <div class="tick-right"></div>
  </div>

  <!-- Logo bas-droite : protégé -->
  <img class="frame-logo no-save"
       src="{{ '/assets/logo0.webp' | url }}" alt="TOLExperience"
       draggable="false" oncontextmenu="return false">

  <!-- Zone scrollable interne au cadre -->
  <div class="viewport">
    <main class="container">
      {{ content | safe }}
    </main>
  </div>

  <script>
    // Applique un éventuel forçage stocké (light/dark) ou laisse l'OS décider s'il n'y en a pas.
    function applyStoredTheme() {
      const stored = localStorage.getItem('theme');
      if (stored === 'dark') {
        document.documentElement.classList.add('dark');
        document.documentElement.classList.remove('light');
      } else if (stored === 'light') {
        document.documentElement.classList.add('light');
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.remove('dark', 'light'); // suit prefers-color-scheme
      }
    }

    // Bascule et mémorise : si aucun forçage, inverse la préférence système.
    function toggleTheme(){
      const root = document.documentElement;
      if (root.classList.contains('dark')) {
        root.classList.remove('dark');
        root.classList.add('light');
        localStorage.setItem('theme', 'light');
      } else if (root.classList.contains('light')) {
        root.classList.remove('light');
        root.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      } else {
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          root.classList.add('light');
          localStorage.setItem('theme', 'light');
        } else {
          root.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      }
    }

    // Appliquer au chargement
    applyStoredTheme();

    function goBack(){ if (history.length > 1) history.back(); else location.href = '/'; }

    /* Protection clic droit + drag sur .no-save et <img> non autorisées */
    document.addEventListener('contextmenu', (e) => {
      const el = e.target.closest('img, .no-save');
      if (el && !el.matches('[data-allow]')) e.preventDefault();
    }, {capture:true});
    document.addEventListener('dragstart', (e) => {
      const el = e.target.closest('img, .no-save');
      if (el && !el.matches('[data-allow]')) e.preventDefault();
    }, {capture:true});
  </script>
</body>
</html>
